function result = pso(problem)
%{

%}

    obj = problem.objective;
    x0 = problem.x0;
    lb = problem.lb;
    ub = problem.ub;
    nvars = size(lb,1);

    hybridopts = optimoptions(@fmincon...
    ... Optimization algorithm, 'interior-point' (default)
    ... https://se.mathworks.com/help/optim/ug/choosing-the-algorithm.html
        ,'Algorithm','trust-region-reflective' ...
    ... Displays output at each iteration, 'final' (default)
        ,'Display','final' ...
    ... Termination tolerance on x, 1e-6 (default) | 1e-10 (interior-point)
        ,'StepTolerance',1e-6 ...
    ... Termination tolerance on the function value, 1e-6 (default) 
        ,'FunctionTolerance',1e-6 ...
    ... Max number of iterations, 400 (default) | 1000 (interrior-point)
        ,'MaxIterations',300 ...
    ... Maximum number of function evaluations allowed, 
    ... 100*nvars (default) | 3000 (interrior-point)
        ,'MaxFunctionEvaluations',100*nvars ... 
    ... Gradient for the objective function, false (default)
        ,'SpecifyObjectiveGradient',true ...
    ... When true, fmincon estimates gradients in parallel, false (default)
        ,'UseParallel',false ...
    );

    options = optimoptions(@particleswarm...
    ... Displays output at each iteration, 'final' (default)
        ,'Display','final' ...
    ... Termination tolerance on the function value, 1e-6 (default) 
        ,'FunctionTolerance',1e-5 ...
    ... Function that continues the optimization after particleswarm terminates    
        ,'HybridFcn',{'fmincon',hybridopts} ...
    ... Initial population or partial population of particles.
        ,'InitialSwarmMatrix',x0 ... % the rest of the swarm is random
    ... Max number of iterations, 200*nvars (default)
        ,'MaxIterations',100 ...
    ... Positive integer with default 20
        ,'MaxStallIterations',20 ...
    ... Maximum number of seconds without an improvement in the best known 
    ... objective function value. Positive scalar with default Inf.
        ,'MaxStallTime',inf ...
    ... Maximum time in seconds that particleswarm runs. Default is Inf.
        ,'MaxTime',inf ...
    ... Minimum adaptive neighborhood size, a scalar from 0 to 1. 0.25 (default)
        ,'MinNeighborsFraction',.20 ...
    ... Weighting of each particle’s best position when adjusting velocity
    ... 1.49 (default)
        ,'SelfAdjustmentWeight',1.25 ...
    ... Weighting of the neighborhood’s best position when adjusting velocity
    ... 1.49 (default)
        ,'SocialAdjustmentWeight',1.75 ...
    ... Number of particles in the swarm. Default is min(100,10*nvars)
        ,'SwarmSize',(20+2*nvars) ...
    ... When true, fmincon estimates gradients in parallel, false (default)
        ,'UseParallel',true ...
    );


    [xmin,fval,exitflag,output] = particleswarm(obj,nvars,lb,ub,options);
    result.xmin = xmin;
    result.fval = fval;
    result.exitflag = exitflag;
    result.output = output;
end

